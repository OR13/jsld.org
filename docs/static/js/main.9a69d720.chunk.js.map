{"version":3,"sources":["components/Logo/logo.svg","serviceWorker.js","store/keystore/actions.js","store/keystore/reducer.js","store/keystore/redux.js","store/keystore/handlers.js","store/keystore/index.js","store/keystore/container.js","store/tmui/actions.js","store/tmui/reducer.js","store/tmui/redux.js","store/tmui/handlers.js","store/tmui/index.js","store/tmui/container.js","store/history.js","store/index.js","store/create.js","components/AppBarWithDrawer/primarySearchAccountMenuMobile.js","components/AppBarWithDrawer/primarySearchAccountMenu.js","components/AppBarWithDrawer/AppBarWithDrawer.js","components/AppBarWithDrawer/DrawerContent.js","components/Snackbar/MySnackbarContentWrapper.js","components/Snackbar/Snackbar.js","components/Theme/Theme.js","pages/BasePage/BasePage.js","components/AgriculturalFuturesDemo/AgriculturalFuturesDemo.js","pages/HomePage/HomePage.js","pages/index.js","pages/HomePage/index.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","setKeystoreProp","createAction","payload","handleActions","state","connect","keystore","actions","keyToDidDoc","didMethodKey","driver","withHandlers","doImportKeystore","data","a","doCreateWalletKeystore","Ed25519KeyPair","generate","ed25519Key","doc","wall","DIDWallet","create","keys","type","encoding","didPublicKeyEncoding","publicKey","publicKeyBase58","privateKey","privateKeyBase58","tags","id","notes","doUpdateKeystore","keystoreString","Object","values","JSON","parse","doDeleteKeystore","doToggleKeystore","password","loading","unlock","message","lock","ciphered","console","log","e","error","reducer","container","compose","withRedux","setTmuiProp","isPrimaryDrawerOpen","isSpeedDialogOpen","activeTabIndex","currentRole","label","value","tmui","doSetTmuiProp","doToggleSpeedDial","doSelectActiveTab","doFabClick","context","fabClick","createBrowserHistory","router","connectRouter","history","primarySearchAccountMenuMobile","badgeContent","ariaLabel","icon","onClick","open","push","primarySearchAccountMenu","useStyles","makeStyles","theme","root","display","grow","flexGrow","menuButton","marginRight","spacing","title","breakpoints","up","breadcrumbs","searchIcon","width","height","position","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","sectionDesktop","sectionMobile","appBar","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","contentShift","AppBarWithDrawer","headerImage","headerText","classes","useTheme","React","useState","setOpen","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleMobileMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","map","i","MenuItem","key","renderMobileMenu","IconButton","aria-label","Badge","className","CssBaseline","AppBar","style","boxShadow","clsx","Toolbar","edge","src","alt","Typography","variant","noWrap","aria-controls","aria-haspopup","event","currentTarget","Drawer","anchor","paper","direction","Divider","sideMenuPrimaryItem","showForRoles","DrawerContent","Fragment","List","filter","indexOf","ListItem","button","ListItemIcon","ListItemText","primary","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","default","useStyles1","backgroundColor","green","palette","dark","main","amber","fontSize","iconVariant","opacity","MySnackbarContentWrapper","props","other","Icon","SnackbarContent","aria-describedby","action","TSnackbar","snackBarMessage","autoHideDuration","handleClose","reason","Snackbar","config","splashImage","primaryColor","deepPurple","secondaryColor","teal","createMuiTheme","light","lighten","darken","secondary","alert","pink","A400","Theme","children","ThemeProvider","BasePage","logo","AgriculturalFuturesDemo","gutterBottom","paragraph","rel","href","target","stringify","s","token","o","p","jsonldPageAnnotation","name","HomePage","Helmet","charSet","dangerouslySetInnerHTML","__html","Link","frameborder","allow","allowfullscreen","PAGES","path","exact","component","appReducers","persistConfig","whitelist","storage","middlewares","thunk","routerMiddleware","store","createStore","persistReducer","combineReducers","rootReducer","composeWithDevTools","applyMiddleware","withReduxEnhancer","persistor","persistStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a69d720.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.33b194d8.svg\";","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { createAction } from \"redux-actions\";\n\nexport const setKeystoreProp = createAction(\n  \"keystore/SET_KEYSTORE_PROP\",\n  payload => payload\n);\n","import { handleActions } from \"redux-actions\";\nimport { setKeystoreProp } from \"./actions\";\n\n// TODO: UPDATE PLACEHOLDER\nconst initialState = {};\n\nexport default handleActions(\n  {\n    [setKeystoreProp]: (state, { payload }) => ({ ...state, ...payload })\n  },\n  initialState\n);\n","import { connect } from \"react-redux\";\nimport * as actions from \"./actions\";\n\nexport default connect(({ keystore }) => ({ keystore }), { ...actions });\n","import { withHandlers } from \"recompose\";\nimport { Ed25519KeyPair } from \"crypto-ld\";\nimport didMethodKey from \"did-method-key\";\nimport DIDWallet from \"@transmute/did-wallet\";\n\nconst { keyToDidDoc } = didMethodKey.driver();\n\nexport default withHandlers({\n  doImportKeystore: ({ setKeystoreProp }) => async data => {\n    setKeystoreProp({\n      keystore: { data }\n    });\n  },\n  doCreateWalletKeystore: ({ setKeystoreProp }) => async () => {\n    const ed25519Key = await Ed25519KeyPair.generate();\n    const doc = keyToDidDoc(ed25519Key);\n    const wall = DIDWallet.create({\n      keys: [\n        {\n          type: \"assymetric\",\n          encoding: \"base58\",\n          didPublicKeyEncoding: \"publicKeyBase58\",\n          publicKey: ed25519Key.publicKeyBase58,\n          privateKey: ed25519Key.privateKeyBase58,\n          tags: [\"Ed25519VerificationKey2018\", doc.id, \"web\"],\n          notes: \"\"\n        }\n      ]\n    });\n    setKeystoreProp({\n      keystore: {\n        data: {\n          keys: wall.keys\n        }\n      }\n    });\n  },\n  doUpdateKeystore: ({ setKeystoreProp }) => async keystoreString => {\n    const wall = DIDWallet.create({\n      keys: Object.values(JSON.parse(keystoreString))\n    });\n    setKeystoreProp({\n      keystore: {\n        data: {\n          keys: wall.keys\n        }\n      }\n    });\n  },\n  doDeleteKeystore: ({ setKeystoreProp }) => async () => {\n    setKeystoreProp({\n      keystore: null\n    });\n  },\n  doToggleKeystore: ({ keystore, setKeystoreProp }) => async password => {\n    setKeystoreProp({ loading: true });\n    try {\n      let message;\n      if (typeof keystore.keystore.data === \"string\") {\n        const wall = DIDWallet.create(keystore.keystore.data);\n        wall.unlock(password);\n        setKeystoreProp({\n          keystore: {\n            data: {\n              keys: wall.keys\n            }\n          }\n        });\n        message = \"Unlocked keystore.\";\n      } else {\n        const wall = DIDWallet.create({\n          keys: Object.values(keystore.keystore.data.keys)\n        });\n        wall.lock(password);\n        setKeystoreProp({\n          keystore: {\n            data: wall.ciphered\n          }\n        });\n        message = \"Locked keystore.\";\n      }\n      console.log(message);\n    } catch (e) {\n      console.error(e);\n    }\n    setKeystoreProp({ loading: false });\n  }\n});\n","import reducer from './reducer';\nimport container from './container';\n\n// export { reducer, container };\n\nexport default {\n  reducer,\n  container,\n};\n","import { compose } from 'recompose';\nimport withRedux from './redux';\nimport withHandlers from './handlers';\n\nexport default compose(withRedux, withHandlers);\n","import { createAction } from 'redux-actions';\n\n// TODO: UPDATE PLACE HOLDER\nexport const setTmuiProp = createAction(\n  'tmui/SET_TMUI_PROP',\n  payload => payload\n);\n","import { handleActions } from 'redux-actions';\nimport { setTmuiProp } from './actions';\n\n// TODO: UPDATE PLACEHOLDER\nconst initialState = {\n  isPrimaryDrawerOpen: false,\n  isSpeedDialogOpen: false,\n  activeTabIndex: 0,\n  currentRole: {\n    label: 'CBP Admin',\n    value: 'cbp_admin',\n  },\n};\n\nexport default handleActions(\n  {\n    [setTmuiProp]: (state, { payload }) => ({ ...state, ...payload }),\n  },\n  initialState\n);\n","import { connect } from 'react-redux';\nimport * as actions from './actions';\n\nexport default connect(({ tmui }) => ({ tmui }), { ...actions });\n","import { withHandlers } from 'recompose';\n\nexport default withHandlers({\n  doSetTmuiProp: ({ setTmuiProp }) => payload => {\n    setTmuiProp(payload);\n  },\n  doToggleSpeedDial: ({ setTmuiProp }) => payload => {\n    setTmuiProp({ isSpeedDialogOpen: payload });\n  },\n  doSelectActiveTab: ({ setTmuiProp }) => activeTabIndex => {\n    setTmuiProp({ activeTabIndex });\n  },\n\n  doFabClick: ({ setTmuiProp }) => context => {\n    setTmuiProp({ fabClick: context });\n  },\n});\n","import reducer from './reducer';\nimport container from './container';\n\n// export { reducer, container };\n\nexport default {\n  reducer,\n  container,\n};\n","import { compose } from 'recompose';\nimport withRedux from './redux';\nimport withHandlers from './handlers';\n\nexport default compose(withRedux, withHandlers);\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import { connectRouter } from \"connected-react-router\";\n\nimport keystore from \"./keystore\";\nimport tmui from \"./tmui\";\nimport history from \"./history\";\n\nexport default {\n  router: connectRouter(history),\n  keystore: keystore.reducer,\n  tmui: tmui.reducer\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport withReduxEnhancer from \"addon-redux/enhancer\";\n\nimport rootReducer from \".\";\nimport history from \"./history\";\n\nexport default (appReducers = {}) => {\n  // Persistance configuration\n  const persistConfig = {\n    key: \"root\",\n    whitelist: [\"edv\", \"keystore\"], // TODO: UPDATE PLACEHOLDER\n    storage\n  };\n\n  const middlewares = [thunk, routerMiddleware(history)];\n\n  // TODO: refactor for production\n  if (process.env.NODE_ENV !== \"production\") {\n    // const reduxListener = createStorybookListener();\n    // middlewares.push(reduxListener);\n  }\n\n  // Store.\n  const store = createStore(\n    persistReducer(\n      persistConfig,\n      combineReducers({ ...rootReducer, ...appReducers })\n    ),\n    composeWithDevTools(\n      compose(applyMiddleware(...middlewares), withReduxEnhancer)\n    )\n  );\n\n  // Persistor.\n  const persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n    history\n  };\n};\n","import React from \"react\";\n\nimport HomeIcon from \"@material-ui/icons/Home\";\n// import VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nimport CodeIcon from \"@material-ui/icons/Code\";\n\nimport history from \"../../store/history\";\n\nconst primarySearchAccountMenuMobile = [\n  // {\n  //   badgeContent: 0,\n  //   ariaLabel: \"keystore\",\n  //   icon: <VpnKeyIcon />,\n  //   label: \"Keystore\",\n  //   onClick: () => {\n  //     history.push(\"/keystore\");\n  //   }\n  // },\n  {\n    badgeContent: 0,\n    ariaLabel: \"source\",\n    icon: <CodeIcon />,\n    label: \"Source\",\n    onClick: () => {\n      window.open(\"https://github.com/OR13/jsld.org\", \"_blank\");\n    }\n  },\n  {\n    badgeContent: 0,\n    ariaLabel: \"home\",\n    icon: <HomeIcon />,\n    label: \"Home\",\n    onClick: () => {\n      history.push(\"/\");\n    }\n  }\n];\n\nexport default primarySearchAccountMenuMobile;\n","import history from \"../../store/history\";\n\nconst primarySearchAccountMenu = [\n  // {\n  //   label: \"Keystore\",\n  //   onClick: () => {\n  //     history.push(\"/keystore\");\n  //   }\n  // },\n  {\n    label: \"Source\",\n    onClick: () => {\n      window.open(\"https://github.com/OR13/jsld.org\", \"_blank\");\n    }\n  },\n  {\n    label: \"Home\",\n    onClick: () => {\n      history.push(\"/\");\n    }\n  }\n];\n\nexport default primarySearchAccountMenu;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nimport primarySearchAccountMenuMobile from \"./primarySearchAccountMenuMobile\";\nimport primarySearchAccountMenu from \"./primarySearchAccountMenu\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  breadcrumbs: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: 200\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n}));\n\nfunction AppBarWithDrawer({ headerImage, headerText, drawer, content }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      {primarySearchAccountMenu.map(i => {\n        return (\n          <MenuItem key={i.label} onClick={i.onClick}>\n            {i.label}\n          </MenuItem>\n        );\n      })}\n    </Menu>\n  );\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {primarySearchAccountMenuMobile.map(i => {\n        return (\n          <MenuItem key={i.label} onClick={i.onClick}>\n            <IconButton aria-label={i.ariaLabel} color=\"inherit\">\n              <Badge badgeContent={i.badgeContent} color=\"secondary\">\n                {i.icon}\n              </Badge>\n            </IconButton>\n            <p>{i.label}</p>\n          </MenuItem>\n        );\n      })}\n    </Menu>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        style={{ boxShadow: \"none\" }}\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n\n          {headerImage ? (\n            <img\n              src={headerImage}\n              alt={headerText}\n              className={classes.title}\n              style={{ height: \"28px\" }}\n            />\n          ) : (\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              {headerText}\n            </Typography>\n          )}\n\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              aria-label={primarySearchAccountMenuMobile[0].ariaLabel}\n              onClick={primarySearchAccountMenuMobile[0].onClick}\n              color=\"inherit\"\n            >\n              <Badge color=\"secondary\">\n                {primarySearchAccountMenuMobile[0].icon}\n              </Badge>\n            </IconButton>\n\n            <IconButton\n              aria-label={primarySearchAccountMenuMobile[1].ariaLabel}\n              color=\"inherit\"\n              onClick={primarySearchAccountMenuMobile[1].onClick}\n            >\n              <Badge\n                badgeContent={primarySearchAccountMenuMobile[1].badgeContent}\n                color=\"secondary\"\n              >\n                {primarySearchAccountMenuMobile[1].icon}\n              </Badge>\n            </IconButton>\n\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircleIcon />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        {drawer}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        {content}\n      </main>\n    </div>\n  );\n}\n\nAppBarWithDrawer.propTypes = {\n  headerImage: PropTypes.any,\n  headerText: PropTypes.any,\n  drawer: PropTypes.any,\n  content: PropTypes.any\n};\n\nexport default AppBarWithDrawer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport List from \"@material-ui/core/List\";\n\nimport CodeIcon from \"@material-ui/icons/Code\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n// import VpnKeyIcon from \"@material-ui/icons/VpnKey\";\n\nimport history from \"../../store/history\";\n\nconst sideMenuPrimaryItem = [\n  {\n    label: \"Home\",\n    icon: <HomeIcon />,\n    showForRoles: [\"tier0\", \"tier1\", \"tier2\"],\n    onClick: () => {\n      history.push(\"/\");\n    }\n  },\n  // {\n  //   label: \"Keystore\",\n  //   icon: <VpnKeyIcon />,\n  //   showForRoles: [\"tier0\", \"tier1\", \"tier2\"],\n  //   onClick: () => {\n  //     history.push(\"/keystore\");\n  //   }\n  // },\n  {\n    label: \"Source\",\n    icon: <CodeIcon />,\n    showForRoles: [\"tier0\", \"tier1\", \"tier2\"],\n    onClick: () => {\n      window.open(\"https://github.com/OR13/jsld.org\", \"_blank\");\n    }\n  }\n];\n\nfunction DrawerContent({ tmui, setTmuiProp }) {\n  const values = {\n    currentRole: {\n      label: \"User\",\n      value: \"tier0\"\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <List>\n        {sideMenuPrimaryItem\n          .filter(i => {\n            return i.showForRoles.indexOf(values.currentRole.value) !== -1;\n          })\n          .map(i => (\n            <ListItem button key={i.label} onClick={i.onClick}>\n              <ListItemIcon>{i.icon}</ListItemIcon>\n              <ListItemText primary={i.label} />\n            </ListItem>\n          ))}\n      </List>\n    </React.Fragment>\n  );\n}\n\nDrawerContent.propTypes = {\n  tmui: PropTypes.any,\n  setTmuiProp: PropTypes.any\n};\n\nexport default DrawerContent;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\n\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n  default: InfoIcon\n};\n\nconst useStyles1 = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: \"flex\",\n    alignItems: \"center\"\n  }\n}));\n\nfunction MySnackbarContentWrapper(props) {\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  // eslint-disable-next-line\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      // eslint-disable-next-line\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nMySnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf([\"error\", \"info\", \"success\", \"warning\", \"default\"])\n    .isRequired\n};\n\nexport { MySnackbarContentWrapper };\nexport default MySnackbarContentWrapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport MySnackbarContentWrapper from \"./MySnackbarContentWrapper\";\n\nfunction TSnackbar(props) {\n  const {\n    open,\n    variant,\n    message,\n    autoHideDuration,\n    vertical,\n    horizontal\n  } = props.tmui.snackBarMessage || {\n    variant: \"default\",\n    vertical: \"bottom\",\n    horizontal: \"right\"\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.doSetTmuiProp({\n      snackBarMessage: {\n        ...props.tmui.snackBarMessage,\n        open: false\n      }\n    });\n  };\n\n  return (\n    <div>\n      <Snackbar\n        anchorOrigin={{\n          vertical,\n          horizontal\n        }}\n        open={open}\n        autoHideDuration={autoHideDuration}\n        onClose={handleClose}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleClose}\n          variant={variant}\n          message={message}\n        />\n      </Snackbar>\n    </div>\n  );\n}\n\nTSnackbar.propTypes = {\n  tmui: PropTypes.object.isRequired,\n  doSetTmuiProp: PropTypes.func.isRequired\n};\n\nexport { TSnackbar as Snackbar };\nexport default TSnackbar;\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { pink, deepPurple, teal } from \"@material-ui/core/colors\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\n\nconst config = {\n  splashImage: \"https://source.unsplash.com/random\",\n  primaryColor: deepPurple[800],\n  secondaryColor: teal[500]\n};\n\nconst theme = createMuiTheme({\n  splashImage: config.splashImage,\n  palette: {\n    primary: {\n      light: lighten(config.primaryColor, 0.07),\n      main: config.primaryColor,\n      dark: darken(config.primaryColor, 0.5)\n    },\n    secondary: {\n      light: lighten(config.secondaryColor, 0.07),\n      main: config.secondaryColor,\n      dark: darken(config.secondaryColor, 0.5)\n    },\n    alert: {\n      light: lighten(pink.A400, 0.07),\n      main: pink.A400,\n      dark: darken(pink.A400, 0.5)\n    }\n  }\n});\n\nfunction Theme({ children }) {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n}\n\nexport default Theme;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBarWithDrawer from \"../../components/AppBarWithDrawer/AppBarWithDrawer\";\nimport DrawerContent from \"../../components/AppBarWithDrawer/DrawerContent\";\nimport Snackbar from \"../../components/Snackbar/Snackbar\";\n\nimport logo from \"../../components/Logo/logo.svg\";\n\nimport Theme from \"../../components/Theme/Theme\";\n\nconst BasePage = ({ tmui, doSetTmuiProp, children }) => (\n  <Theme>\n    <AppBarWithDrawer\n      headerImage={logo}\n      drawer={<DrawerContent tmui={tmui} doSetTmuiProp={doSetTmuiProp} />}\n      content={children}\n    />\n    <Snackbar tmui={tmui} doSetTmuiProp={doSetTmuiProp} />\n  </Theme>\n);\n\nBasePage.propTypes = {\n  children: PropTypes.any.isRequired,\n  tmui: PropTypes.any,\n  setTmuiProp: PropTypes.any\n};\n\nexport default BasePage;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nconst graphName = \"https://jsld.org\";\n\nconst AgriculturalFuturesDemo = () => (\n  <React.Fragment>\n    <Typography variant=\"h6\" gutterBottom>\n      Technology Example\n    </Typography>\n    <Typography paragraph>\n      Lets use SPARQL to read and write some hypothetical data with a\n      semantically aware database... This example makes use of a number of open\n      standards, which are listed below.\n    </Typography>\n    <p>\n      \"Decentralized identifiers (DIDs) are a new type of identifier to provide\n      verifiable, decentralized digital identity. These new identifiers are\n      designed to enable the controller of a DID to prove control over it and to\n      be implemented independently of any centralized registry, identity\n      provider, or certificate authority.\" <br />\n      <a\n        rel=\"noopener noreferrer\"\n        href=\"https://www.w3.org/TR/did-core/\"\n        target=\"_blank\"\n      >\n        https://www.w3.org/TR/did-core/\n      </a>\n    </p>\n    <p>\n      \"The initial focus of the GS1 Web Vocabulary is consumer facing properties\n      for clothing, shoes, food beverage/tobacco and properties common to all\n      products. Food/Beverage/Tobacco properties will include properties related\n      to EU 1169 as defined in the GDSN and GS1 Source Standards.\" <br />\n      <a\n        rel=\"noopener noreferrer\"\n        href=\"https://www.gs1.org/voc/\"\n        target=\"_blank\"\n      >\n        https://www.gs1.org/voc/\n      </a>\n    </p>\n    <p>\n      \"The Financial Industry Business Ontology (FIBO) defines the sets of\n      things that are of interest in financial business applications and the\n      ways that those things can relate to one another.\" <br />\n      <a\n        rel=\"noopener noreferrer\"\n        href=\"https://spec.edmcouncil.org/fibo/\"\n        target=\"_blank\"\n      >\n        https://spec.edmcouncil.org/fibo/\n      </a>\n    </p>\n    <p>\n      \"The Fipa ontology describes a device ontology that aims at enabling\n      interoperability between software agents, as defined by the FIPA Device\n      Ontology Specification. This ontology can be used by agents when\n      communicating about devices: when agents pass profiles of devices to each\n      other, these profiles can be validated using the information contained in\n      this ontology.\" <br />\n      <a\n        rel=\"noopener noreferrer\"\n        href=\"https://sites.google.com/site/smartappliancesproject/ontologies/fipa-ontology\"\n        target=\"_blank\"\n      >\n        https://sites.google.com/site/smartappliancesproject/ontologies/fipa-ontology\n      </a>\n    </p>\n    <p>\n      \"Schema.org vocabulary can be used with many different encodings,\n      including RDFa, Microdata and JSON-LD. These vocabularies cover entities,\n      relationships between entities and actions, and can easily be extended\n      through a well-documented extension model. Over 10 million sites use\n      Schema.org to markup their web pages and email messages. Many applications\n      from Google, Microsoft, Pinterest, Yandex and others already use these\n      vocabularies to power rich, extensible experiences.\" <br />\n      <a rel=\"noopener noreferrer\" href=\"https://schema.org/\" target=\"_blank\">\n        https://schema.org/\n      </a>\n    </p>\n    <pre>\n      {`\n    PREFIX dce: <http://purl.org/dc/elements/1.1/>\n    PREFIX dct: <http://purl.org/dc/terms/>\n    PREFIX sch: <http://schema.org/>\n    PREFIX gs1: <https://www.gs1.org/voc/>\n    PREFIX agro: <http://semantic.icmc.usp.br/sustenagro/>\n    PREFIX iot: <http://sites.google.com/site/smartappliancesproject/ontologies/fipa#>\n    PREFIX fin: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanContracts/LoanCore/>\n\n    INSERT DATA {\n        GRAPH <${graphName}/dids> {\n\n          # people\n\n          <did:key:z6Mko1tRsXAYuLqixQ2sVQEjQ3gHxvTVah9xiCcfYzujmaED> \n          dce:creator \"Fred Farmer\"  ;\n          dct:AgentClass \"Farmer\" .\n\n          <did:elem:EiAcNS3PHOIDjWLGpIuno0rRtd_WmmdNGgqT6A8jFL8grQ> \n          dce:creator \"Bill Banker\"  ;\n          dct:AgentClass \"Banker\" .\n\n          <did:v1:nym:z6MkuYhA5TN5XGyvFhjhLjBkJ19hY2HnQgwe7h5q1NkK5bjf>\n          dce:creator \"Tim Trader\"  ;\n          dct:AgentClass \"Commodities Trader\" .\n\n          <did:ethr:0xE6Fe788d8ca214A080b0f6aC7F48480b2AEfa9a6>\n          dce:creator \"Idris IoTAnalyst\"  ;\n          dct:AgentClass \"IoT Analyst\" .\n\n          # places\n\n          <http://farm.example.com/field/0>\n          gs1:productName \"Soy Bean Field\" ;\n          gs1:productYield \"1000 tons\" ;\n          sch:polygon \"[100.0, 0.0], [101.0, 0.0], [101.0, 1.0], [100.0, 1.0], [100.0, 0.0]\" ;\n          agro:beginningOfPlantingDate \"2020-03-01T20:16:46Z\" ;\n          agro:finishOfPlantingDate \"2020-03-07T20:16:46Z\"    ;\n          agro:beginningOfHarvestDate \"2020-06-01T20:16:46Z\"  ;\n          agro:finishOfHarvestDate \"2020-06-07T20:16:46Z\"      ;\n          dct:rightsHolder \"did:key:z6Mko1tRsXAYuLqixQ2sVQEjQ3gHxvTVah9xiCcfYzujmaED\" .\n\n          # devices \n\n          <did:ockam:2Mm9pLRQwueo7FJUvBoDW7QKGBXTX>\n          gs1:productName \"Mesur.io Earthstream Device\" ;\n          iot:hasCPU \"Intel® Quark™ Microcontroller D2000\" ;\n          iot:hasAvailable \"32 KB\";\n          dct:rightsHolder \"did:ethr:0xE6Fe788d8ca214A080b0f6aC7F48480b2AEfa9a6\" .\n\n          # assets\n\n          <did:key:z6MkhomH1sHgUW1DMYJTWAxK19cm4cit8WTzoT1ZaUUKTiHV>\n          gs1:productName \"Commercial Loan\" ;\n          fin:hasOriginatorPerson  \"Bill Banker\" ;\n          fin:hasOriginatorCompany \"BNY Mellon\" ;\n          fin:LenderLienPosition \"primary\" ;\n          fin:LoanMarketCategory \"<https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanContracts/LoanCore/_LoanMarketCategory_Commercial>\" ;\n          dct:rightsHolder \"did:elem:EiAcNS3PHOIDjWLGpIuno0rRtd_WmmdNGgqT6A8jFL8grQ\" .\n\n          <did:key:z6MkezW5kJjrXuFMHRYBGSqZPv5Gq79ZKWGtZwV9jtCsV99Y>\n          gs1:productName \"Soy Bean Futures Contract\" ;\n          sch:temporalCoverage \"<http://farm.example.com/field/0>\" ;\n          fin:hasOriginatorPerson  \"Tim Trader\" ;\n          fin:hasOriginatorCompany \"JPM Chase\" ;\n          sch:price \"55.00\" ;\n          sch:priceCurrency \"USD\" ;\n          dct:rightsHolder \"did:v1:nym:z6MkuYhA5TN5XGyvFhjhLjBkJ19hY2HnQgwe7h5q1NkK5bjf\" .\n\n          <did:key:z6Mko1EsZqGrgD1aTzGEFAdYTHa5CB5SSTVxiHALhoHCT83w>\n          gs1:productName \"Container Soy Beans\" ;\n          gs1:grossWeight \"1 ton\" ;\n          gs1:sizeDimension \"10 x 10 x 5 ft\" ;\n          dct:rightsHolder \"did:key:z6Mko1tRsXAYuLqixQ2sVQEjQ3gHxvTVah9xiCcfYzujmaED\" .\n\n        } \n    }`}\n    </pre>\n    <Typography variant=\"h6\" gutterBottom>\n      Bill Banker wants to know the assets of Fred Farmer as they relate to\n      underwriting a commercial loan. Fred Farmer might need a loan to buy\n      fertilizer or farming equipment.\n    </Typography>\n    <pre>\n      {`\n    PREFIX dct: <http://purl.org/dc/terms/>\n    PREFIX gs1: <https://www.gs1.org/voc/>\n    select * where { \n        ?s gs1:productName ?o .\n        ?s ?p \"did:key:z6Mko1tRsXAYuLqixQ2sVQEjQ3gHxvTVah9xiCcfYzujmaED\" .\n    } limit 100 \n    `}\n    </pre>\n    Returns:\n    <pre>\n      {JSON.stringify(\n        [\n          {\n            s: { token: \"uri\", value: \"http://farm.example.com/field/0\" },\n            o: { token: \"literal\", value: \"Soy Bean Field\" },\n            p: { token: \"uri\", value: \"http://purl.org/dc/terms/rightsHolder\" }\n          },\n          {\n            s: {\n              token: \"uri\",\n              value: \"did:key:z6Mko1EsZqGrgD1aTzGEFAdYTHa5CB5SSTVxiHALhoHCT83w\"\n            },\n            o: { token: \"literal\", value: \"Container Soy Beans\" },\n            p: { token: \"uri\", value: \"http://purl.org/dc/terms/rightsHolder\" }\n          }\n        ],\n        null,\n        2\n      )}\n    </pre>\n    <Typography variant=\"h6\" gutterBottom>\n      Idris IoTAnalyst wants to know which devices he is responsible for so he\n      can ensure they are reporting on environmental factors that might impact\n      crop yield.\n    </Typography>\n    <pre>\n      {`\n    PREFIX gs1: <https://www.gs1.org/voc/>\n    select * where { \n        ?s gs1:productName ?o .\n        ?s ?p \"did:ethr:0xE6Fe788d8ca214A080b0f6aC7F48480b2AEfa9a6\" .\n    } limit 100 \n    `}\n    </pre>\n    Returns:\n    <pre>\n      {JSON.stringify(\n        [\n          {\n            s: {\n              token: \"uri\",\n              value: \"did:ockam:2Mm9pLRQwueo7FJUvBoDW7QKGBXTX\"\n            },\n            o: { token: \"literal\", value: \"Mesur.io Earthstream Device\" },\n            p: { token: \"uri\", value: \"http://purl.org/dc/terms/rightsHolder\" }\n          }\n        ],\n        null,\n        2\n      )}\n    </pre>\n    <Typography variant=\"h6\" gutterBottom>\n      Tim Trader wants to know which fields are associated with a futures\n      contract, so he can check on sensor data that might impact yield provided\n      by Idris.\n    </Typography>\n    <pre>\n      {`\n    PREFIX gs1: <https://www.gs1.org/voc/>\n    PREFIX fin: <https://spec.edmcouncil.org/fibo/ontology/LOAN/LoanContracts/LoanCore/>\n    PREFIX sch: <http://schema.org/>\n    select * where { \n        ?s gs1:productName \"Soy Bean Futures Contract\" .\n        ?s sch:temporalCoverage ?o .\n\n    } limit 100 \n    `}\n    </pre>\n    Returns:\n    <pre>\n      {JSON.stringify(\n        [\n          {\n            s: {\n              token: \"uri\",\n              value: \"did:key:z6MkezW5kJjrXuFMHRYBGSqZPv5Gq79ZKWGtZwV9jtCsV99Y\"\n            },\n            o: { token: \"literal\", value: \"<http://farm.example.com/field/0>\" }\n          }\n        ],\n        null,\n        2\n      )}\n    </pre>\n  </React.Fragment>\n);\n\nAgriculturalFuturesDemo.propTypes = {\n  //\n};\n\nexport default AgriculturalFuturesDemo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Link from \"@material-ui/core/Link\";\n// import Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Helmet } from \"react-helmet\";\n\nimport BasePage from \"../BasePage/BasePage\";\n\n// import history from \"../../store/history\";\n\nimport AgriculturalFuturesDemo from \"../../components/AgriculturalFuturesDemo/AgriculturalFuturesDemo\";\n\n// const hasUnlockedKeystore = props => {\n//   return (\n//     props.keystore.keystore && typeof props.keystore.keystore.data === \"object\"\n//   );\n// };\n\n// const CallToAction = props => {\n//   if (!hasUnlockedKeystore(props)) {\n//     return (\n//       <Button\n//         style={{ float: \"right\" }}\n//         variant={\"contained\"}\n//         color={\"primary\"}\n//         onClick={() => {\n//           history.push(\"/keystore\");\n//         }}\n//       >\n//         Create\n//       </Button>\n//     );\n//   }\n//   if (hasUnlockedKeystore(props)) {\n//     return (\n//       <Button\n//         style={{ float: \"right\" }}\n//         variant={\"contained\"}\n//         color={\"primary\"}\n//         onClick={() => {\n//           history.push(\"/documents\");\n//         }}\n//       >\n//         Explore\n//       </Button>\n//     );\n//   }\n// };\n\n// const ExplainerText = props => {\n//   if (!hasUnlockedKeystore(props)) {\n//     return (\n//       <Typography paragraph>\n//         Before proceeding, please ensure you setup a keystore.\n//       </Typography>\n//     );\n//   }\n//   if (hasUnlockedKeystore(props)) {\n//     return (\n//       <Typography paragraph>\n//         You have an unlocked keystore and are ready to explore.\n//       </Typography>\n//     );\n//   }\n// };\n\nconst jsonldPageAnnotation = {\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"WebSite\",\n  name: \"jsld.org\"\n};\n\nconst HomePage = props => (\n  <BasePage {...props}>\n    <Helmet>\n      <meta charSet=\"utf-8\" />\n      <title>jsld.org</title>\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify(jsonldPageAnnotation)\n        }}\n      ></script>\n    </Helmet>\n    {/* <Typography variant=\"h3\" gutterBottom>\n      Home\n      <CallToAction {...props} />\n    </Typography>\n    <br />\n    <ExplainerText {...props} />\n    <br /> */}\n    <Typography variant=\"h5\" gutterBottom>\n      What is JSON-LD?\n    </Typography>\n    <Typography paragraph>\n      JSON-LD is designed to be usable directly as JSON, with no knowledge of\n      RDF. It is also designed to be usable as RDF, if desired, for use with\n      other Linked Data technologies like SPARQL. Developers who require any of\n      the facilities listed above or need to serialize an RDF Graph or RDF\n      Dataset in a JSON-based syntax will find JSON-LD of interest. People\n      intending to use JSON-LD with RDF tools will find it can be used as\n      another RDF syntax, like Turtle.\n    </Typography>\n    <Link href=\"https://www.w3.org/TR/json-ld/\">Read JSON-LD Spec</Link>\n    <br />\n    <br />\n    <Typography variant=\"h5\" gutterBottom>\n      Case Study: Agricultural Futures\n    </Typography>\n    <Typography paragraph>\n      How can we use JSON-LD along with other semantic web technologies to\n      tackle agricultural futures? See this brief overview of agricultural\n      futures.\n    </Typography>\n    <iframe\n      title=\"agricultural futures\"\n      width=\"560\"\n      height=\"315\"\n      src=\"https://www.youtube.com/embed/IhAHOlnnl1g\"\n      frameborder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowfullscreen\n    ></iframe>\n    <br />\n    <br />\n    <Typography variant=\"h5\">\n      Let's investigate some of the key technical areas covered or implied in\n      the video.\n    </Typography>\n    <br />\n    <Typography variant=\"h6\" gutterBottom>\n      Futures Trader\n    </Typography>\n    <Typography paragraph>A Person who trades agricultural futures.</Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Commodity\n    </Typography>\n    <Typography paragraph>\n      Products such as Cattle, Corn or Soybeans.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Seasonality\n    </Typography>\n    <Typography paragraph>\n      Some products can only be produced during certain times of year. This\n      creates a supply and demand cycle, creating the need for accurate\n      forcasts.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Crop Yields\n    </Typography>\n    <Typography paragraph>\n      Analysts must address uncertainty regarding crop yields.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Production Cycle\n    </Typography>\n    <Typography paragraph>\n      Planting, Growth and Harvesting, factors impacting each phase can cause\n      changes in price.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Weather\n    </Typography>\n    <Typography paragraph>\n      Weather is the most import factor affecting price for most agricultural\n      products.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Data Sources\n    </Typography>\n    <Typography paragraph>\n      Internet of things device feeds, NOAA weather reports, satellite data\n      might help provide aditional context about factors impating crop yield.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Government Subsidies\n    </Typography>\n    <Typography paragraph>\n      Financial incentives can cause farmers to choose to produce different\n      products, impacting supply and affecting price.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      Market Activity\n    </Typography>\n    <Typography paragraph>\n      International markets, changes in trade regulations and cultural\n      preferences could impact demand and price.\n    </Typography>\n    <Typography variant=\"h6\" gutterBottom>\n      USDA Reports\n    </Typography>\n    <Typography paragraph>\n      For{\" \"}\n      <a\n        rel=\"noopener noreferrer\"\n        href=\"https://downloads.usda.library.cornell.edu/usda-esmis/files/m039k491c/h989rc35c/5h73q524k/plva0519.txt\"\n      >\n        example\n      </a>\n      ... \"This file presents the annual estimates of production and value for\n      commercial broilers, eggs, turkeys raised, and chickens lost or sold for\n      slaughter by states and U.S. The report also highlights changes in the\n      data in comparison to the previous years. This report supplements Broiler\n      Hatchery, Chickens and Eggs, and Turkey Hatchery, and continues Poultry\n      Production, Disposition, and Income. These estimates were based on\n      inventory, disposition, production, and price estimates as published in\n      various NASS poultry and agricultural prices reports, as well as\n      information on imports, exports, and slaughter obtained from other sources\n      \"\n    </Typography>\n    <br />\n    <br />\n    <Typography variant=\"h6\" gutterBottom>\n      Agricultural Ontologies\n    </Typography>\n    <Typography paragraph>\n      Below is a short video explaining how agricultural ontologies can model\n      the relationships among these concept, and assist with data portability,\n      enabling more accurate forcasts from integrating disperate sources of\n      information.\n    </Typography>\n    <iframe\n      title=\"agricultural ontologies\"\n      width=\"560\"\n      height=\"315\"\n      src=\"https://www.youtube.com/embed/v3DjG2EMgig\"\n      frameborder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowfullscreen\n    ></iframe>\n    <br />\n    <br />\n    <Typography variant=\"h6\" gutterBottom>\n      Internet of Things Ontologies\n    </Typography>\n    <Typography paragraph>\n      Ontologies are also useful for modeling the relationships among data\n      collection and reporting services.\n    </Typography>\n    <iframe\n      title=\"iot ontologies\"\n      width=\"560\"\n      height=\"315\"\n      src=\"https://www.youtube.com/embed/1wbXvfFsiMg\"\n      frameborder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowfullscreen\n    ></iframe>\n    <br />\n    <br />\n    <Typography variant=\"h6\" gutterBottom>\n      Financial and Banking Ontologies\n    </Typography>\n    <Typography paragraph>\n      Ontologies are also useful for modeling the relationships among financial\n      services, vendors, banks and asset classes.\n    </Typography>\n    <iframe\n      title=\"financial ontologies\"\n      width=\"560\"\n      height=\"315\"\n      src=\"https://www.youtube.com/embed/IKFHklf94lo\"\n      frameborder=\"0\"\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowfullscreen\n    ></iframe>\n    <br />\n    <br />\n\n    <AgriculturalFuturesDemo />\n  </BasePage>\n);\n\nHomePage.propTypes = {\n  tmui: PropTypes.any\n};\n\nexport default HomePage;\n","import HomePage from \"./HomePage\";\n// import KeystorePage from \"./KeystorePage\";\n\nexport const PAGES = [\n  { path: \"/\", exact: true, component: HomePage }\n  // { path: \"/keystore\", exact: true, component: KeystorePage }\n];\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport tmui from \"../../store/tmui\";\nimport keystore from \"../../store/keystore\";\n\nimport HomePage from \"./HomePage\";\n\nconst container = compose(tmui.container, keystore.container);\n\nexport default container(props => {\n  return <HomePage {...props} />;\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport createStore from \"./store/create\";\n\nimport { PAGES } from \"./pages\";\n\nconst { store, persistor, history } = createStore();\n\n// eslint-disable-next-line\nconsole.log(\"🦄  Welcome to jsld.org!\");\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <ConnectedRouter history={history}>\n        <Switch>\n          {\" \"}\n          {PAGES.map(({ exact, path, component }) => (\n            <Route key={path} exact={exact} path={path} component={component} />\n          ))}\n        </Switch>\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}